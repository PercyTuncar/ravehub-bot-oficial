require('dotenv').config();
const mongoose = require('mongoose');
const ShopItem = require('./models/ShopItem'); // Aseg√∫rate de que la ruta al modelo es correcta

// Nueva lista de productos
const products = [
  // üõèÔ∏è Bienes Ra√≠ces
  {
    name: "Casa en San Isidro",
    description: "Casa de 3 pisos en C√≥rpac, zona exclusiva de Lima.",
    price: 500000,
    emoji: "üè°",
  },
  {
    name: "Casa en SJL",
    description: "Casa de esteras en SJL",
    price: 10000,
    emoji: "üè†",
  },

  // üöó Veh√≠culos
  {
    name: "Auto Tesla Model 3",
    description: "Auto el√©ctrico Tesla, autonom√≠a avanzada y dise√±o futurista.",
    price: 129000,
    emoji: "‚ö°",
  },
  {
    name: "Chevrolet (Sapito)",
    description: "Compacto y con mucho estilo.",
    price: 8000,
    emoji: "üöó",
  },
  {
    name: "Mototaxi",
    description: "Transporte urbano econ√≥mico.",
    price: 4500,
    emoji: "üõ∫",
  },

  // üì± Tecnolog√≠a
  {
    name: "iPhone 16 Pro",
    description: "Apple Intelligence, dise√±o titanio, triple c√°mara.",
    price: 5149,
    emoji: "üì±",
  },
  {
    name: "iPhone 16 Pro Max",
    description: "Pantalla m√°s grande, bater√≠a superior, c√°mara pro.",
    price: 5999,
    emoji: "üì±",
  },

  // üéÅ Productos graciosos y para regalar
  {
    name: "Ramo de rosas",
    description: "Para esa persona especial üåπ‚ú®",
    price: 200,
    emoji: "üåπ",
  },
  {
    name: "Peluche rave-beb√©",
    description: "Un tierno compa√±ero de festival üß∏",
    price: 350,
    emoji: "üß∏",
  },
  {
    name: "Cerveza fr√≠a",
    description: "Ideal para refrescarse en el post-rave ü•µüç∫",
    price: 100,
    emoji: "üç∫",
  },
  {
    name: "Carta de amor rave",
    description: "Una declaraci√≥n de amor con mucho glitter ‚ú®",
    price: 150,
    emoji: "üíå",
  },

  // üé´ Tickets de eventos
  {
    name: "Pase VIP Far Away Peru",
    description: "Acceso VIP al evento Far Away en Per√∫.",
    price: 150,
    emoji: "üéüÔ∏è",
  },
  {
    name: "Pase VIP Ultra Per√∫ 2026",
    description: "Acceso VIP a Ultra Per√∫ 2026.",
    price: 350,
    emoji: "üéüÔ∏è",
  },
  {
    name: "Ticket GA Ultra Per√∫ 2026",
    description: "Entrada general para Ultra Per√∫ (1 d√≠a).",
    price: 190,
    emoji: "üéüÔ∏è",
  },
  {
    name: "Ticket David Guetta Lima",
    description: "Ticket para el show de David Guetta en Lima.",
    price: 287,
    emoji: "üé´",
  },
  {
    name: "Entrada Boris Brejcha General",
    description: "Acceso general para Boris Brejcha.",
    price: 130,
    emoji: "üé´",
  },
  {
    name: "Entrada Boris Brejcha VIP",
    description: "Acceso VIP para Boris Brejcha.",
    price: 200,
    emoji: "üé´",
  },
  {
    name: "Entrada Boris Brejcha Palco",
    description: "Palco VIP para Boris.",
    price: 300,
    emoji: "üé´",
  },
  {
    name: "Ticket DLDK Per√∫ 2025",
    description: "Pre-registro para el evento DLDK en Per√∫.",
    price: 120,
    emoji: "üéüÔ∏è",
  },

  // üéâ Tem√°ticos de festivales de m√∫sica electr√≥nica
  {
    name: "Camisa con logo de RaveHub",
    description: "Muestra tu orgullo por la comunidad üî•üíñ",
    price: 1000,
    emoji: "üëï",
  },
  {
    name: "Glitter m√°gico",
    description: "Brilla toda la noche en la pista de baile ‚ú®",
    price: 300,
    emoji: "‚ú®",
  },
  {
    name: "Perrito rave",
    description: 'Tu compa√±ero de baile  üê∂üéµ',
    price: 1000,
    emoji: "üê∂",
  },
];

const seedDB = async () => {
    try {
        await mongoose.connect(process.env.MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });

        console.log('Conectado a MongoDB...');

        // Limpiar la colecci√≥n de productos existentes
        await ShopItem.deleteMany({});
        console.log('Productos antiguos eliminados.');

        // Mapear los nuevos productos al modelo, asumiendo stock infinito
        const itemsToInsert = products.map(product => ({
            ...product,
            stock: -1, // Stock infinito
            // No se especifica groupId, ser√°n items globales
        }));

        // Insertar los nuevos productos
        await ShopItem.insertMany(itemsToInsert);
        console.log('¬°La tienda ha sido actualizada con los nuevos productos!');

    } catch (error) {
        console.error('Error actualizando la tienda:', error);
    } finally {
        // Cerrar la conexi√≥n a la base de datos
        await mongoose.connection.close();
        console.log('Conexi√≥n a MongoDB cerrada.');
    }
};

// Ejecutar el script
seedDB();
